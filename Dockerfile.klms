# -------------------------------------------------
# Base image
# -------------------------------------------------
FROM python:3.11-slim AS base

ARG DEBIAN_FRONTEND=noninteractive
ENV CONDA_DIR=/opt/conda
ENV CONDA_ENV=stconf
ENV PATH=${CONDA_DIR}/bin:$PATH

# -------------------------------------------------
# 1. System-level packages
# -------------------------------------------------
COPY docker/apt-packages.txt /tmp/apt-packages.txt
RUN apt-get update && \
    xargs -a /tmp/apt-packages.txt apt-get install -y --no-install-recommends && \
    rm -rf /var/lib/apt/lists/* /tmp/apt-packages.txt

# -------------------------------------------------
# 2. Miniconda
# -------------------------------------------------
RUN wget -qO /tmp/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    bash /tmp/miniconda.sh -b -p "${CONDA_DIR}" && \
    rm /tmp/miniconda.sh

# -------------------------------------------------
# 3. Conda environment
# -------------------------------------------------
COPY docker/environment.yml /tmp/environment.yml
RUN ${CONDA_DIR}/bin/conda env create -f /tmp/environment.yml && \
    ${CONDA_DIR}/bin/conda clean --all --yes && \
    ln -s ${CONDA_DIR}/envs/${CONDA_ENV} ${CONDA_DIR}/env && \
    echo "conda activate ${CONDA_ENV}" >> /etc/bash.bashrc

# Make sure subsequent RUN/CMD/ENTRYPOINT use the env
SHELL ["bash", "-l", "-c"]

# -------------------------------------------------
# 4. Application code
# -------------------------------------------------
WORKDIR /app
COPY . /app
RUN chmod +x run.sh

# -------------------------------------------------
# 5. Default entrypoint
# -------------------------------------------------
ENTRYPOINT ["bash", "-l", "-c", "exec ./run.sh"]
